@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
    }
body {
    border: 0;
    font: 14px/1.5 sans-serif;
    margin: 0;
    padding: 0;
    }
input[type="checkbox"] {
    margin-inline-end: 0.5em;
    -webkit-margin-end: 0.5em;
    }
.root {
    background-color: white;
    overflow: auto;
    padding: 0.5em 0;
    }
.entry {
    align-items: center;
    display: flex;
    margin: 0.5em 0;
    }
.entry > * {
    margin-left: 0;
    margin-right: 0;
    margin-inline-end: 0.5em;
    -webkit-margin-end: 0.5em;
    }
#actions {
    position: sticky;
    top: 0;
    z-index: 10;
    }
#listsOfBlockedHostsPrompt {
    cursor: pointer;
    }
#lists {
    margin: 0.5em 0 0 0;
    padding: 0;
    }
#listsOfBlockedHostsPrompt::before,
.groupEntry:not([data-groupkey="user"]) .geDetails::before {
    color: #888;
    content: '\2212';
    font-family: monospace;
    font-size: large;
    margin-inline-end: 0.25em;
    -webkit-margin-end: 0.25em;
    }
body.hideUnused #listsOfBlockedHostsPrompt::before,
.groupEntry.hideUnused:not([data-groupkey="user"]) .geDetails::before {
    content: '+';
    }
.groupEntry {
    margin: 0.5em 0;
    }
.groupEntry .geDetails {
    cursor: pointer;
    }
.groupEntry .geName {
    pointer-events: none;
    }
.groupEntry .geCount {
    font-size: 90%;
    pointer-events: none;
    }
.listEntries {
    margin-inline-start: 0.7em;
    -webkit-margin-start: 0.7em;
    }
.listEntry {
    margin: 0.5em 0;
    white-space: nowrap;
    }
.groupEntry:not([data-groupkey="user"]) .listEntry.unused {
    display: none;
    }
.listEntry > * {
    margin-left: 0;
    margin-right: 0;
    margin-inline-end: 0.5em;
    -webkit-margin-end: 0.5em;
    unicode-bidi: embed;
    }
.listEntry > label {
    align-items: center;
    display: inline-flex;
    }
.listEntry.toRemove input[type="checkbox"] {
    visibility: hidden;
    }
.listEntry.toRemove .listname {
    text-decoration: line-through;
    }
.listEntry .fa {
    color: inherit;
    display: none;
    font-size: 110%;
    opacity: 0.5;
    vertical-align: baseline;
    }
.listEntry .content {
    display: inline-block;
    }
.listEntry a.towiki {
    display: inline-block;
    }
.listEntry a.fa:hover {
    opacity: 1;
    }
.listEntry.support > a.support {
    display: inline-block;
    }
.listEntry .remove {
    color: darkred;
    cursor: pointer;
    }
.listEntry.external .remove {
    display: inline-block;
    }
.listEntry.mustread a.mustread {
    display: inline-block;
    }
.listEntry.mustread a.mustread:hover {
    color: mediumblue;
    }
.listEntry .counts {
    display: none;
    font-size: smaller;
}
.listEntry.checked .counts {
    display: inline;
}
.dim {
    opacity: 0.6;
    }
.listEntry .status {
    color: #444;
    cursor: default;
    display: none;
}
.listEntry .status:hover {
    opacity: 1;
    }
.listEntry .unsecure {
    color: darkred;
    }
.listEntry.checked.unsecure .unsecure {
    display: inline-block;
    }
.listEntry .failed {
    color: darkred;
    }
.listEntry.failed .failed {
    display: inline-block;
    }
.listEntry .cache {
    cursor: pointer;
    }
.listEntry.checked.cached:not(.obsolete) .cache {
    display: inline-block;
    }
.listEntry .obsolete {
    color: hsl(36, 100%, 40%);
    }
body:not(.updating) .listEntry.checked.obsolete .obsolete {
    display: inline-block;
    }
.listEntry .updating {
    transform-origin: 50% 46%;
    }
body.updating .listEntry.checked.obsolete .updating {
    animation: spin 2s linear infinite;
    display: inline-block;
    }
.listEntry.toImport input[type="checkbox"] ~ textarea {
    border: 1px solid #ccc;
    box-sizing: border-box;
    display: block;
    font-size: smaller;
    height: 6em;
    margin: 0;
    resize: vertical;
    visibility: hidden;
    white-space: pre;
    width: 100%;
    }
.listEntry.toImport input[type="checkbox"]:checked ~ textarea {
    visibility: visible;
    }

@media (pointer: coarse) {
    body {
        font: 16px/1.5 sans-serif;
    }
}
